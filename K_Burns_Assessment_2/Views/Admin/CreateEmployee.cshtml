@model K_Burns_Assessment_2.Models.ViewModels.CreateEmployeeViewModel

@{
    ViewBag.Title = "CreateEmployee";
}

<h2 class="text-center">Create Employee</h2>

<br />


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="row ms-3">
    <div class="col-md-6 form-horizontal">
        
        @Html.ValidationSummary(true, "", new { @class = "text-warning" })

        <div class="form-group row">
            <div class="col-sm-4">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label White-Text" })
            </div>
            <div class="col-sm-6">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control mb-3" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-warning" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-4">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label White-Text" })
            </div>
            <div class="col-sm-6">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control mb-3" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-warning" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-4">
                @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label White-Text" })
            </div>
            <div class="col-sm-6">
                @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control mb-3" } })
                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-warning" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-4">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label White-Text" })
            </div>
            <div class="col-sm-6">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control mb-3" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-warning" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-4">
                @Html.LabelFor(model => model.Postcode, htmlAttributes: new { @class = "control-label White-Text" })
            </div>
            <div class="col-sm-6">
                @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control mb-3" } })
                @Html.ValidationMessageFor(model => model.Postcode, "", new { @class = "text-warning" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-4">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label White-Text" })
            </div>
            <div class="col-sm-6">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control mb-3" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-warning" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-4">
                @Html.LabelFor(model => model.EmailConfirm, htmlAttributes: new { @class = "control-label White-Text" })
            </div>
            <div class="col-sm-6">
                <div class="checkbox">
                    @Html.EditorFor(model => model.EmailConfirm, new { htmlAttributes = new { @class = "mb-3" } })
                </div>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-4">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label White-Text" })
            </div>
            <div class="col-sm-6">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control mb-3" } })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-4">
                @Html.LabelFor(model => model.PhoneConfirm, htmlAttributes: new { @class = "control-label White-Text" })
            </div>
            <div class="col-sm-6">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PhoneConfirm, new { htmlAttributes = new { @class = "mb-3" } })
                </div>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-4">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label White-Text" })
            </div>
            <div class="col-sm-6">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control mb-3" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-warning" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-4">
                @Html.LabelFor(model => model.EmployementStatus, htmlAttributes: new { @class = "control-label White-Text" })
            </div>
            <div class="col-sm-6">
                @Html.EnumDropDownListFor(model => model.EmployementStatus, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group row mt-3">
            <div class="col-sm-4">
                @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label White-Text" })
            </div>
            <div class="col-sm-6">
                @Html.DropDownListFor(model => model.Role, Model.Roles, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <br />
        <br />

    </div>
</div>

<div class="d-flex justify-content-center d-inline">
    <p>@Html.ActionLink("Back to View Users", "ViewUsers", null, new { @class = "links-colors" })</p>

    <div class="form-group ms-5">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="CREATE" class="btn btn-outline-secondary custom-btn-sm" />
        </div>
    </div>
</div>

}
